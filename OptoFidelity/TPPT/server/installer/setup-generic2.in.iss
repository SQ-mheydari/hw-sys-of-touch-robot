; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName app_name
#define MyAppVersion version_string
#define MyAppPublisher "OptoFidelity, Inc."
#define Company "OptoFidelity"
#define MyAppURL "http://www.optofidelity.com/"
#define MyAppExeName exe_name
#define MyAppId app_id
#define MySetupName setup_name
#define SystemInformation "System Information"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
UsePreviousAppDir=yes
AppId={#MyAppId}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=C:\{#Company}\{#MyAppName}
DisableProgramGroupPage=yes
OutputBaseFilename={#MySetupName}
Compression=lzma
SolidCompression=yes
AppCopyright=Copyright (C) OptoFidelity

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "brazilianportuguese"; MessagesFile: "compiler:Languages\BrazilianPortuguese.isl"
Name: "catalan"; MessagesFile: "compiler:Languages\Catalan.isl"
Name: "corsican"; MessagesFile: "compiler:Languages\Corsican.isl"
Name: "czech"; MessagesFile: "compiler:Languages\Czech.isl"
Name: "danish"; MessagesFile: "compiler:Languages\Danish.isl"
Name: "dutch"; MessagesFile: "compiler:Languages\Dutch.isl"
Name: "finnish"; MessagesFile: "compiler:Languages\Finnish.isl"
Name: "french"; MessagesFile: "compiler:Languages\French.isl"
Name: "german"; MessagesFile: "compiler:Languages\German.isl"

[CustomMessages]
BackupMessage=Creating a back up for the previous installation. This might take a moment.

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "basler"; Description: "Install Basler driver"; GroupDescription: "Optional installations"; Flags: unchecked
Name: "hasp"; Description: "Install HASP driver"; GroupDescription: "Optional installations"; Flags: unchecked
#if MyAppName == "TnT Server"
    Name: "client"; Description: "Generate client"; GroupDescription: "Optional installations"; Flags: unchecked
#endif


[Code]
function BackUpDate(Param: String): String;
begin
  Result := GetDateTimeString('yyyy-mm-dd', '-', '-');
end;

function PrepareToInstall(var NeedsRestart: Boolean): String;
var
   ResultCode: Integer;
   DateString: String;
   ParamString: String;
   BatchFile: String;
begin
   WizardForm.PreparingLabel.Visible := True;
   WizardForm.PreparingLabel.Caption := CustomMessage('BackupMessage');
   DateString := BackUpDate('');
   ParamString := '"' + ExpandConstant('{#MyAppName}') + '" ' + DateString;
   ExtractTemporaryFile('backup_builds.bat');
   BatchFile := ExpandConstant('{tmp}\backup_builds.bat');
   Exec(BatchFile, ParamString, '', SW_HIDE, ewWaitUntilTerminated, ResultCode)
end;


[Files]
Source: "get_previous_configs.bat"; DestDir: "{tmp}";
Source: "backup_builds.bat"; DestDir: "{tmp}"; Flags: dontcopy
Source: "C:\Program Files\Basler\pylon 5\Development\Redist\Drivers\pylon_GigE_Filter_Driver.msi"; DestDir: "{tmp}"
Source: "C:\Program Files\Basler\pylon 5\Development\Redist\Drivers\pylon_GigE_Performance_Driver.msi"; DestDir: "{tmp}"
Source: "C:\hasp_runtime\haspdinst.exe"; DestDir: "{tmp}"
Source: "C:\OptoFidelity\SocketLogger_2.6_Setup.exe"; DestDir: "{tmp}"
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
configuration_install_lines

[Icons]
Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
#if MyAppName == "TnT Server"
    Name: "{commondesktop}\{#SystemInformation}"; Filename: "{app}\{#MyAppExeName}"; Parameters: "--system-information";
#endif

[Run]
Filename: "msiexec.exe"; Parameters: "/i ""{tmp}\pylon_GigE_Filter_Driver.msi"""; Tasks: basler;
Filename: "msiexec.exe"; Parameters: "/i ""{tmp}\pylon_GigE_Performance_Driver.msi"""; Tasks: basler;
Filename: "{tmp}\haspdinst.exe"; Parameters: "-i -nomsg"; StatusMsg: "Installing HASP runtime"; Tasks: hasp;
Filename: "taskkill.exe"; Parameters: "/IM ""SocketLogger.exe"" /F"; StatusMsg: "Stopping Socket logger service";
Filename: "{tmp}\SocketLogger_2.6_Setup.exe"; Parameters: "/SILENT"; StatusMsg: "Installing Socket logger";
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent;
Filename: "{tmp}\get_previous_configs.bat"; Parameters: """{#MyAppName}"""; StatusMsg: "Restore configs if they already exist."
#if MyAppName == "TnT Server"
    Filename: "{app}\generate_client.bat"; StatusMsg: "Generating client"; Tasks: client;
#endif

