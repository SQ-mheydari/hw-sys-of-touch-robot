# TnT Server configuration for standard 3-axis robot (without voicecoil) simulator.
# See doc/configuration.md for general information on how to use config files.
port: 8000

# Configuration consists of a list of node.
nodes:

# Root node of the node hierarchy.
- name: tnt
  cls: TnT.TnT
  parent:


# ================ Simulator ================

# Required for running robot and camera simulators.
# This section should be removed for real robot delivery.
# See also "Simulator content" section below.


- name: fileserver
  cls: NodeFileServer
  parent: tnt
  arguments:
    path: web
    port: 8010
  connection: tnt

# Handles robot and camera simulation.
- name: simulator
  cls: NodeSimulator
  parent: tnt
  connection: tnt


# ================ DUT server ================

# DUT server manages communication with DUT application (Android and TnT Server).
# Required for automatic DUT xy-positioning, sending image to DUT and other DUT communication.
# Must be initialized at this point in config file.
- name: dutserver
  cls: DutServer
  parent: tnt
  arguments:
    #host: 127.0.0.1
    #host: 10.118.240.140
    host: 0.0.0.0
    port: 50008
  connection: tnt


# ================ Boilerplate config ================


- name: workspaces
  cls: TnT.Workspaces
  parent: tnt
  connection: tnt

- name: ws
  cls: TnT.Workspace
  parent: workspaces
  properties: {}
  connection: workspaces

# API Document parser.
- name: doc
  cls: NodeDoc
  parent: tnt
  connection: tnt


# ================ Surface probe ================


# Surface probe is needed for general surface probing when robot has voicecoil or similar trigger.
# Required for automatic DUT and tip z-positioning.
- name: surfaceprobe
  cls: NodeSurfaceProbe
  parent: ws
  connection: ws
  arguments:
    robot: Robot1
  properties:
    surface_probe_settings:
      # VC position should be set to slightly less than VC maximum position.
      voicecoil_probe_position: 6
      # Threshold should be somewhat above zero to avoid triggering from noise.
      surface_detection_threshold: 1.0
      # Probing step should be somewhat smaller than VC position.
      robot_probing_step: 4


# ================ DUT positioning ================


# Defines automatic DUT xy or xyz positioning procedure.
# Required if automatic positioning is used via UI or client.
- name: dutpositioning
  cls: NodeDutPositioning
  parent: ws
  connection: ws
  arguments:
    robot: Robot1
    camera: Camera1
    # Surface probe must be specified if automatic z-positioning is used.
    surfaceprobe: surfaceprobe


# ================ Containers ================


- name: robots
  cls: TnT.Robots
  parent: ws
  connection: ws

- name: cameras
  cls: TnT.Cameras
  parent: ws
  connection: ws

- name: tools
  cls: TnT.Tools
  parent: ws
  connection: ws

- name: duts
  cls: TnT.Duts
  parent: ws
  connection: ws
  arguments:
    # Choose this according to robot (TnT.Gestures, Synchro.Gestures or Voicecoil.Gestures)
    gestures_cls: Voicecoil.Gestures

- name: tips
  cls: TnT.Tips
  parent: ws
  connection: ws

- name: icons
  cls: NodeIcons
  parent: ws
  connection: ws
  properties:
    icon_folder_path: data/icons

- name: images
  cls: TnT.Images
  parent: ws
  connection: ws
  properties:
    image_folder_path: data/images
    # Number of most recent images to keep.
    max_images: 10

- name: detectors
  cls: TnT.Detectors
  parent: ws
  connection: ws

- name: analyzers
  cls: TnT.Analyzers
  parent: ws

- name: physical_buttons
  cls: TnT.PhysicalButtons
  parent: ws
  connection: ws

- name: motherboards
  cls: TnT.Motherboards
  parent: ws
  connection: ws

- name: speakers
  cls: NodeSpeakers
  parent: ws
  connection: ws


# ================ Detectors ================


# Fiducial detector is needed for automatic tip slot XY positioning.
- name: tip_fiducial
  cls: TnT.Detector
  parent: detectors
  arguments:
    driver: TipFiducial
  connection:

# Halcon detector is required for icon detection. Halcon software needs to be also installed separately.
- name: halcon
  cls: TnT.Detector
  parent: detectors
  connection: detectors
  arguments:
    driver: Halcon
    # Run Halcon in separate process to avoid possible crashes.
    multiprocessing: true
    # Time in seconds after which Halcon is considered stuck and process is closed.
    process_timeout: 10.0

# Abbyy detector is required for OCR based on Abbyy (needs to be installed on the system separately).
- name: abbyy
  cls: TnT.Detector
  parent: detectors
  connection: detectors
  arguments:
    driver: Abbyy
    license: SWED-1000-0003-0684-9595-9238
    # Version can be 10 or 12.
    version: 10

# Tesseract detector is required for OCR based on Tesseract.
- name: tesseract
  cls: TnT.Detector
  parent: detectors
  connection: detectors
  arguments:
    driver: Tesseract
    # Language data path.
    tessdata_path: 'C:\OptoFidelity\Tesserocr dependencies\tessdata'


# ================ Performance testing (HSUP) ================

# Trigger sensor is required for trigger high speed camera and/or PIT
- name: triggersensor
  cls: NodeMotherboardTriggerSensor
  parent: ws
  arguments:
    robot: Robot1
    io_dev_addr: 8
    trigger_pos: -50
    debug: false
  connection:

# Video sensor is required to trigger the high speed camera.
- name: videosensor
  cls: NodeVideoSensor
  parent: ws
  arguments:
    port: COM12
    # Threshold value only needed if videosensor is used as triggersensor for watchdog.
    # For optical switch typical value is -1 and for voicecoil 50.
    trigger_threshold: 50
  connection:

# Watchdog analyzer is part of HSUP feature package.
# Requires high speed camera (hsup_camera).
- name: watchdog
  cls: TnT.Analyzer
  parent: analyzers
  arguments:
    driver: Hsup
    camera: hsup_camera
    # Choose triggersensor based on HW configuration. Either triggersensor or videosensor can provide the service.
    triggersensor: triggersensor
    videosensor: videosensor
    analysis: Watchdog
  connection:

# SPA analyzer is part of HSUP feature package.
# Requires high speed camera (hsup_camera).
- name: spa
  cls: TnT.Analyzer
  parent: analyzers
  arguments:
    driver: Hsup
    camera: hsup_camera
    videosensor: videosensor
    analysis: SPA
  connection:

# P2I analyzer is part of HSUP feature package.
# Requires high speed camera (hsup_camera).
- name: p2i
  cls: TnT.Analyzer
  parent: analyzers
  arguments:
    driver: Hsup
    camera: hsup_camera
    videosensor: videosensor
    analysis: P2I
  connection:


# ================ Other analyzers ================


# Audio analyzer can find frequency peaks (beep sounds) from audio recording.
- name: audio_analyzer
  cls: TnT.Analyzer
  parent: analyzers
  arguments:
    driver: Audio
  connection:


# ================ Force calibration ================


# Futek sensor is used to measure force readings.
- name: futek
  cls: NodeFutek
  parent: ws
  connection: ws
  arguments:
    serial_number: 765339
    number_of_averages: 4
    sample_rate: 25
    invert_polarity: true

# Force calibration procedure.
# This is required if force calibration is done via UI or client.
# Requires Futek sensor (or similar force sensor) configuration.
- name: forcecalibrator
  path: forcecalibrator
  # NodeCalibratorForceVoiceCoil - Open loop force with voicecoil (synchro tool).
  # NodeCalibratorOptoStdForce - Closed loop force (voicecoil tool with loadcell).
  cls: NodeCalibratorForceVoiceCoil
  #cls: NodeCalibratorOptoStdForce
  parent: ws
  arguments:
    robot: Robot1
    sensor: futek


# ================ Motherboard ================


# Motherboard IO control. Required if motherboard IO is to be controlled via UI or client.
- name: Motherboard1
  cls: TnT.Motherboard
  parent: motherboards
  arguments:
    bus_address: 8
  properties:
    robot_name: Robot1
    io_spec_output:
      1:
        alias: light1
      3:
        alias: light2
  connection: ws


# ================ Speaker ================


# Speaker is used to playback audio by some audio device.
- name: speaker1
  cls: NodeSpeaker
  parent: speakers
  connection: speakers
  arguments:
    device_name: jabra
    chunk_size: 1024
  properties:
    device_name: mydevice
    chunk_size: 100


# ================ Robot ================


# Robot base frame.
# Not strictly required but exists for legacy.
- name: Robot1_base
  cls: Node
  parent: ws
  connection: ws


# Robot node controls a physical robot or a simulation.
# This robot node is configured for standard 3-axis robot (without voicecoil) simulator.
# See configuration/robots for other robot configurations that can be used here instead.
# Make sure that duts node's gestures_cls is appropriate for this robot. For 3-axis it should be TnT.Gestures.
- name: Robot1
  # Robot class depends on the type of robot (TnT.Robot, Synchro.Robot, TwoFingerDt.Robot, Voicecoil.Robot).
  cls: Voicecoil.Robot
  parent: robots
  connection: Robot1_base
  arguments:
    driver: golden
    # Run as simulator? Simulator is ran at host 127.0.0.1. Change to correct host for real robot.
    simulator: true
    host: 127.0.0.1
    #host: 192.168.127.254
    port: 4001
    # Model determines the robot kinematics (see drivers/robots/goldenmov/kinematics).
    model: xyza_vc_stylus
    # Speed and acceleration after TnT Server has initialized.
    speed: 30
    acceleration: 50
    # Home axes during init? Should be true in delivery.
    # Setting to false makes init faster but axes must have been homed properly at some point.
    home_axes: true
    # Restore axis configs before homing? Should be true in delivery.
    # Set to false only when testing custom axis settings.
    restore_axis_configs: true
    # Maximum speed to use when attaching or detaching tips.
    max_tip_change_speed: 100
    # Maximum acceleration to use when attaching or detaching tips.
    max_tip_change_acceleration: 300
    # Define capture position for camera to move robot away from e.g. static camera view.
    # The z-coordinate is optional. If not given, maximum z is used.
    #camera_capture_positions:
    #  Camera1:
    #    x: 100
    #    y: 50
    #    z: 0
    # If robot supports smart tips, uncomment lines below and set correct tool addresses.
    #smart_tip:
    #  # Mode can be simulator, normal or external.
    #  mode: normal
    #  addresses:
    #    tool1: 8
    #  # Define IP address of motherboard when using external mode.
    #  ip_address: 192.168.127.254
    #  id_chip_address: 7
    #  # If true, SW tip status automatically updates according to HW status.
    #  hot_changing: false
  properties:
    calibration_data:
      tool1_offset:
      - - 1.0
        - 0.0
        - 0.0
        - 25.881904510252074  # np.sin(np.radians(15))*100
      - - 0.0
        - 1.0
        - 0.0
        - 0
      - - 0.0
        - 0.0
        - 1.0
        - 96.59258262890683  # np.cos(np.radians(15))*100
      - - 0.0
        - 0.0
        - 0.0
        - 1.0
      tilt_slider_zero_position: 25.881904510252074
    force_calibration_table:
      y:
      - 0
      - 500
      x:
      - 0
      - 500
    robot_acceleration: 200
    robot_velocity: 110.0
    kinematic_name: tool1

# Tool 1 mount is the last point (robot head) in the forward kinematics transform.
- name: tool1_mount
  cls: Mount
  parent: Robot1
  connection: Robot1
  properties:
    mount_point: tool1

# Camera mount is the point in the FK chain where camera is attached to.
- name: camera_mount
  cls: Mount
  parent: Robot1
  connection: Robot1
  properties:
    mount_point: camera

# Tool 1 is the robot head where a tip can be attached (as child node).
- name: tool1
  cls: TnT.Tool
  parent: tools
  connection: tool1_mount
  properties:
    can_attach_tip: true
    can_attach_tool: true
    can_attach_multifinger_tip: false

- name: azimuth_mount
  cls: Mount
  parent: Robot1
  connection: Robot1
  properties:
    mount_point: azimuth

# ================ Cameras ================


# Positioning camera that is attached to robot's camera mount.
- name: Camera1
  cls: TnT.Camera
  parent: cameras
  connection: camera_mount
  arguments:
    # Set flips and rotation so that in camera image workspace x point right and y points down.
    flipx: true
    flipy: true
    rotate: false
    # driver can be one of yasler, ximea, simulator
    driver: simulator
    # camtype can be gige or usb (applicable to yasler)
    camtype: gige
    # Gige (ethernet) camera settings:
    ip_address: 192.168.127.23
    inter_packet_delay: 12000
    packet_size: 1500
    # Number of times to retry image capture in case of camera error.
    retry_count: 10

    # ximea serial number:
    #serial_number: '23599259'

    focal_length: 8
    gain: 5.0
    exposure: 0.005

    # If using stream set max queue size to 1 to avoid memory filling up with images.
    max_queue_size: 1
  properties:
    calibration:
      ppmm: 11.099878311157227
      dist_coeffs:
      - - -1.8630541327994696
        - -304.2692661236519
        - -0.004294761257904507
        - -0.00016955455133425108
        - 11191.555100355941
      intrinsic:
      - - 6997.844696170008
        - 0.0
        - 960.0
      - - 0.0
        - 7056.825639774551
        - 720.0
      - - 0.0
        - 0.0
        - 1.0
  frame:
  - [1.0, 0.0, 0.0, -0.1206385592452263]
  - [0.0, 1.0, 0.0, 56.714252966791875]
  - [0.0, 0.0, 1.0, 56.00000000000001]
  - [0.0, 0.0, 0.0, 1.0]


# High speed camera is required for performance testing (HSUP).
- name: hsup_camera
  cls: TnT.Camera
  parent: cameras
  arguments:
    # Change driver to 'yasler' for real camera.
    driver: simulator
    camtype: usb
    binning_horizontal_mode: Sum
    binning_vertical_mode: Sum
  properties:
    calibration:
    camera_info:
  connection:


# ================ Simulator content ================

# This section should be removed for real robot delivery.
# Contains various graphical targets to use in testing.

# Visualization of Optofidelity logo.
- name: test_dut_image
  cls: NodeSimulatorObject
  parent: ws
  arguments:
    enabled: true
    type: texture
    ppmm: 20
    position: [200, 250, 0, 0, 0, 0]
    image: tntserver/web/img/test_dut.png
    #draw: color black; rect 0 0 100 100; color red; rect 10 10 90 90;
    width: 70
    height: 118
    simulator_parent_object: table
  connection: ws

# Visualization of index blob target that can be used to test e.g. camera distortion calibration.
# To enable this first disable chess_target below as it is spatially overlapping.
- name: index_blob_target
  cls: NodeSimulatorObject
  parent: ws
  arguments:
    enabled: false
    type: blobs
    ppmm: 8
    position: [50, 430, 0, 0, 0, 0]
    width: 200
    height: 200
    margin: 20
    radius: 3
    simulator_parent_object: table
  connection: ws

# Visualization of chess target that can be used to test e.g. camera distortion calibration.
- name: chess_target
  cls: NodeSimulatorObject
  parent: ws
  arguments:
    enabled: true
    type: chessboard
    ppmm: 4
    position: [50, 430, 0, 0, 0, 0]
    width: 200
    height: 160
    bs: 8
    bw: 20
    bh: 14
    simulator_parent_object: table
  connection: ws

# Visualization of blob target that can be used to test e.g. camera offset calibration.
- name: single_blob_target
  cls: NodeSimulatorObject
  parent: ws
  arguments:
    enabled: true
    type: texture
    ppmm: 2
    position: [300, 300, 0, 0, 0, 0]
    width: 100
    height: 100
    simulator_parent_object: table
    draw: color black; rect 0 0 100 100 0; color white; circle 50 50 5 0;
  connection: ws

# Visualization of circle target that can be used to test e.g. camera offset calibration.
- name: camera_offset_target
  cls: NodeSimulatorObject
  parent: ws
  arguments:
    enabled: true
    type: texture
    ppmm: 8
    position: [300, 500, 0, 0, 0, 0]
    width: 50
    height: 50
    simulator_parent_object: table
    draw: color black; circle 25 25 6 4; line 10 25 40 25 2; line 25 10 25 40 2;
  connection: ws

# This is a special DUT that responds to DUT communication. Can be used to test automatic DUT positioning.
- name: simu_dut
  cls: DutSimulation
  parent: duts
  arguments:
    screen:
      width: 100
      height: 150
      ppmm: 10
      position: [50, 250, 0, 0, 0, -10]
    host: 127.0.0.1
    port: 50008

  properties:
    tl:
      y: 206.699
      x: 150.61
      z: -214.5
    tr:
      y: 189.399
      x: 249.11
      z: -214.5
    server_host: 127.0.0.1
    base_distance: 10.0
    width: 100.00769970357283
    bl:
      y: 354.299
      x: 176.81
      z: -214.5
    height: 149.90730469193284
    touch_distance: 0.0
    server_port: 50008
    data:
      image_height:
        value: '0'
      image_width:
        value: '0'
      screen_height:
        value: '0'
      screen_width:
        value: '0'
    surface:
    surface_data:
    svg_scale:
    - 1
    - 1
  connection: duts
  frame:
  - [0.9847667162895597, 0.1738807478942911, 0.0, 150.61]
  - [-0.1738807478942911, 0.9847667162895597, 0.0, 206.699]
  - [0.0, 0.0, 1.0, -214.5]
  - [0.0, 0.0, 0.0, 1.0]

# Textured simulator objects that is used to visualize parent DUT.
- cls: NodeSimulatorObject
  name: simu_dut_object
  properties:
    transient: true
  arguments:
    draw: color orange; rect 0 0 62.0 134.347 0;
    position:
    - 0
    - 0
    - 0
    - 0.0
    - 0.0
    - 0.0
    width: 62.0
    type: texture
    height: 134.347
    ppmm: 10.0
    simulator_parent_object: table
  parent: simu_dut
  connection: simu_dut


# ================ Resources created at runtime (DUTs, tips, physical buttons etc.) ================


- name: dut1
  cls: TnT.Dut
  parent: duts
  frame:
  - [1.0, 0.0, 0.0, 303.96]
  - [0.0, 1.0, 0.0, 209.933]
  - [0.0, 0.0, 1.0, -214.5]
  - [0.0, 0.0, 0.0, 1.0]
  properties:
    base_distance: 10.0
    tl:
      y: 209.933
      x: 303.96
      z: -214.5
    height: 105.40000000000003
    data:
      image_height:
        value: '0'
      image_width:
        value: '0'
      screen_height:
        value: '0'
      screen_width:
        value: '0'
    bl:
      y: 315.333
      x: 303.96
      z: -214.5
    tr:
      y: 209.933
      x: 367.36
      z: -214.5
    touch_distance: 0.0
    surface_data:
    width: 63.400000000000034
    svg_scale:
    - 1
    - 1
  connection: duts

- name: tip1
  cls: TnT.Tip
  parent: tips
  connection:
  frame:
  - [1.0, 0.0, 0.0, 0.0]
  - [0.0, 1.0, 0.0, 0.0]
  - [0.0, 0.0, 1.0, 16.0]
  - [0.0, 0.0, 0.0, 1.0]
  properties:
    slot_out:
    - [1.0, 0.0, 0.0, 335.151]
    - [-0.0, 1.0, -0.0, 34.536]
    - [-0.0, 0.0, 1.0, -28.5]
    - [0.0, 0.0, 0.0, 1.0]
    data:
      unit: 0
    length: 16
    type: Universal
    diameter: 9
    slot_in:
      - [1.0, 0.0, 0.0, 335.151]
      - [-0.0, 1.0, -0.0, 4.536]
      - [-0.0, 0.0, 1.0, -28.5]
      - [0.0, 0.0, 0.0, 1.0]
    first_finger_offset:
    grippable: false
    model: Standard
    num_tips:
    separation:
    tip_distance:
    voice_coil_position:

- name: tip2
  cls: TnT.Tip
  parent: tips
  connection:
  frame:
  - [1.0, 0.0, 0.0, 0.0]
  - [0.0, 1.0, 0.0, 0.0]
  - [0.0, 0.0, 1.0, 16.0]
  - [0.0, 0.0, 0.0, 1.0]
  properties:
    slot_out:
    - [1.0, 0.0, 0.0, 355.151]
    - [-0.0, 1.0, -0.0, 34.535]
    - [-0.0, 0.0, 1.0, -28.4]
    - [0.0, 0.0, 0.0, 1.0]
    data:
      unit: 1
    length: 16
    type: Universal
    diameter: 9
    slot_in:
    - [1.0, 0.0, 0.0, 355.151]
    - [-0.0, 1.0, -0.0, 4.535]
    - [-0.0, 0.0, 1.0, -28.4]
    - [0.0, 0.0, 0.0, 1.0]
    first_finger_offset:
    grippable: false
    model: Standard
    num_tips:
    separation:
    tip_distance:
    voice_coil_position:
